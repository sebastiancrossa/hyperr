# import * from './generated/prisma.graphql'
type SuccessMessage {
  message: String
}

type Mutation {
  createItem(data: CreateItemInput!): Item!
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  deleteItem(id: ID!): Item!
  signUp(name: String!, email: String!, password: String!): User! # REMINDER: type User isn't on this file, but we have the import line at the top of the file, which includes the needed type
  signIn(email: String!, password: String!): User!
  signOut: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
  addToCart(id: ID!): CartItem
  removeFromCart(id: ID!): CartItem
  createOrder(token: String!): Order!
}

type Query {
  item(where: ItemWhereUniqueInput!): Item!
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item]!
  itemsConnection(where: ItemWhereInput): ItemConnection!
  users: [User]!
  me: User
  order(id: ID!): Order
  orders: [Order]!
}

# Redefining our user schema so we   limit what the front end can access
type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
}

# --- Inputs --- #
input CreateItemInput {
  title: String!
  description: String!
  price: Int!
  image: String
  largeImage: String
}
